import sys
#### running from service-script ####
samples = glob_wildcards("staging/se_reads/{sample}.fastq.gz").sample
msg = 'snakefile command recieved - SINGLE END FASTQ PROCESSING'
sys.stderr.write(msg)
configfile: "../workflow/snakefile/config.json"
ruleorder: fastqc_raw_reads > hisat2_remove_host_dna > fastqc_on_host_removed_reads > classify_with_kraken

rule all:
    input:
        expand('output/{sample}/fastqc_results/raw_reads/raw_{sample}_fastqc.html', sample=samples),
        expand('output/{sample}/hisat2_results/{sample}_host_removed.fastq.gz', sample=samples),
        expand('output/{sample}/fastqc_results/host_removed_reads/{sample}_host_removed_fastqc.html', sample=samples),
        expand('output/{sample}/kraken_output/{sample}_k2_output.txt', sample=samples),

rule fastqc_raw_reads:
    input:
        raw_read = 'staging/se_reads/{sample}.fastq.gz',
    params:
        fastqc_dir = 'output/{sample}/fastqc_results/raw_reads',
        out = 'output'
    output:
        fastqc_html = 'output/{sample}/fastqc_results/raw_reads/raw_{sample}_fastqc.html',
        fastqc_zip = 'output/{sample}/fastqc_results/raw_reads/raw_{sample}_fastqc.zip'
    shell:
        '''
        mkdir -p {params.fastqc_dir}

        {config[fastqc]} --version
        
        {config[fastqc]} {input.raw_read} \
        -o {params.fastqc_dir} -q

        mv {params.fastqc_dir}/{wildcards.sample}_fastqc.html {output.fastqc_html}
        mv {params.fastqc_dir}/{wildcards.sample}_fastqc.zip {output.fastqc_zip}
        '''


rule hisat2_remove_host_dna:
    input:
        raw_read = 'staging/se_reads/{sample}.fastq.gz',
    params:
        hisat2_dir = 'output/{sample}/hisat2_results',
        tmp_name = '{sample}_host_removed',
    output:
        sam = 'output/{sample}/hisat2_results/{sample}_aligned_reads.sam',
        out = 'output/{sample}/hisat2_results/{sample}_host_removed.fastq.gz',
    shell:
        '''
        mkdir -p {params.hisat2_dir}

        {config[hisat2]} --version

        echo "starting hisat2......"

        {config[hisat2]} -x GCF_000001405.39_GRCh38.p13_genomic \
            -U {input.raw_read} \
            --un-gz \
            {params.tmp_name} -S {output.sam} \
            --threads 12

        mv {params.tmp_name} {output.out}
        '''

rule fastqc_on_host_removed_reads:
    input:
        clean_read = 'output/{sample}/hisat2_results/{sample}_host_removed.fastq.gz',
    params:
        fastqc_dir = 'output/{sample}/fastqc_results/host_removed_reads'
    output:
        fastqc_html = 'output/{sample}/fastqc_results/host_removed_reads/{sample}_host_removed_fastqc.html',
        fastqc_zip = 'output/{sample}/fastqc_results/host_removed_reads/{sample}_host_removed_fastqc.zip'
    shell:
        '''
        mkdir -p {params.fastqc_dir}

        {config[fastqc]} --version
        
        {config[fastqc]} {input.clean_read} \
        -o {params.fastqc_dir} -q
        '''

rule classify_with_kraken:
    input:
        clean_se = 'output/{sample}/hisat2_results/{sample}_host_removed.fastq.gz'
    params:
        kraken_dir = 'output/{sample}/kraken_output'
    output:
        k2_output = 'output/{sample}/kraken_output/{sample}_k2_output.txt',
        k2report = 'output/{sample}/kraken_output/{sample}_k2_report.txt'
    shell:
        '''
        mkdir -p {params.kraken_dir}

        {config[kraken2]} --db /vol/patric3/metagenome_dbs/kraken2 \
            --threads 12 \
            --minimum-hit-groups 3 \
            --report-minimizer-data \
            --memory-mapping \
            {input.clean_se} \
            --report {output.k2report} \
            --output {output.k2_output}
        '''